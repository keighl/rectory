#!/usr/bin/env ruby

require 'rectory'
require 'csv'
require 'yaml'
require 'optparse'

Celluloid.logger = nil

options = {}

opt_parser = OptionParser.new do |opt|
  opt.banner = "Rectory"
  opt.separator  ""
  opt.separator  "rectory new [OPTIONS]             --- Build a template CSV for testing redirects"
  opt.separator  "rectory test [CSV FILE] [OPTIONS] --- Test redirects from a CSV spreadsheet"
  opt.separator  ""
  opt.separator  "Options"

  opt.on("-o","--output OUTPUT","where do you want the results/scaffold to be written?") do |o|
    options[:output] = o
  end

  opt.on("-h","--help","help")
end

opt_parser.parse!

case ARGV[0]

when "new"
  output = "new_rectory_redirects.csv"
  output = options[:output] unless options[:output].nil?
  puts "\nGenerating new redirects spreadsheet..."
  CSV.open(output, "wb") do |csv|
    csv << ["url","location","code"]
    csv << ["http://google.com","http://www.google.com",301]
    csv << ["http://www.google.com",nil,200]
  end
  puts "\nFinished: #{output}\n"

when "test"
  output       = "results_#{ARGV[1]}"
  output       = options[:output] unless options[:output].nil?
  expectations = []
  CSV.foreach(ARGV[1]) do |row|
    expectations << Rectory::Expectation.new(row[0], :location => row[1], :code => row[2].to_i)
  end
  expectations.shift
  puts "\nTesting #{expectations.count.to_s} expectations in #{ARGV[1]}..."
  results = Rectory.perform expectations
  Rectory::CsvOutputter.write results, output
  puts "\nFinished! Report written to #{output}\n"

when "help", nil
  puts opt_parser

end

